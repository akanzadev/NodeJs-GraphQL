type Query {
  hello: String!
  getPerson(name: String, age: Int): String
  getInt: Int!
  getFloat: Float
  getBoolean: Boolean
  getString: String
  getID: ID
  getNumbers(numbers: [Int!]!): [Int]
  product(id: ID!): Product!
  products: [Product]
}

type Mutation {
  login(email: String!, password: String!): AuthResponse
  addProduct(dto: CreateProductDto!): Product
  updateProduct(id: ID!, dto: UpdateProductDto!): Product
  deleteProduct(id: ID!): ID
}

type Product {
  id: ID!
  name: String!
  price: Int!
  description: String!
  image: String!
  createdAt: String!
  category: Category!
  categoryId: ID!
}

type Category {
  id: ID!
  name: String!
  image: String!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  password: String!
  createdAt: String!
}

input CreateProductDto {
  name: String!
  price: Int!
  description: String!
  image: String!
  categoryId: ID!
}

input UpdateProductDto {
  name: String
  price: Int
  description: String
  image: String
  categoryId: ID
}
